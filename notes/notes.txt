1.Enter point is app.php
2.In sql forlders are files: apidb.sql and apidb_test.sql ... should be imported in order app to work.
3.Database configs are in config/config.ini
4.I've create a simple interface using smarty ... just to facilitate add/editing and deleting in news table.
5.The api is completely functional and can be used separately from this interface ... just defining different in the router.
6.In app.php are the routing rules managed by Router class.Status codes in Router are more or less custom.
7.All classes are in classes folder.
8.Between router and the actual classes called from it I set Adapter class
9.Tests are runned from tests.php using class ApiTests.php
10.Tests using separate database ( like normal phpunit does)
11.Example usage :

/app.php/news ... return all news
/app.php/news/4 ... return news with id 4 if exists , otherwise will return empty result.
/app.php/users/5 ... user with id 5 if exists
/app.php/users/5/comments ... all comments from user 5 if any if user exists
/app.php/users/6/comments/1 ... comment with 1 from user 6 if both exists
/app.php/news with post and post data will add user
/app.php/news/5 with post will edit this user
/app.php/news/5 with delete will this user

You can easy add functionality by adding routing rule, and controllers in corresponding class.

12.Enjoy :)